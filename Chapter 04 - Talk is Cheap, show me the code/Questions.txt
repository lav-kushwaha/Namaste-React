Chapter 04 - Talk is Cheap, show me the code 

Note: Whatever app we are building first of all build wireframe, do planning before building website we plan then its easy to make website.
/*
Header
    -Logo
    -NavItems
Body 
    -Search
    -RestaurantContainer
         - Restaurant card
             - Image
             - Name
             - Rating
Footer
    -Copyright disclaimer
    -Links
    -Contact
*/

/* My Food App structure will look like this, 
            1) Header
                - Logo
                - Nav Items(right side)
                - Cart
            2) Body
                - Search bar
                - Restaurants List
                    - Restaurant card
                        - Image
                        - Name
                        - Rating
            3) Footer
                - Links
                - Copyrights
       
*/

Q: Is JSX mandatory for React?
A:JSX is an Extension Syntax that allows writing HTML and Javascript together easily in React and is used to create React elements.
=>These elements are then rendered to the React DOM. Each JSX element is just to make use of React easy and for calling React.createElement(component, props, …children) with less work. 
=>So, anything that is done with JSX can also be done with just plain JavaScript. 
=>So JSX is not mandatory but is used for writing better and clean code instead of writing code using React.CreateElement.

#Example of JSX
=>const sample = <h2>Greetings</h2>;

Q: Is ES6 mandatory for React?
A: ES6 is not mandatory for React but is highly recommendable. 
=>The latest projects created on React rely a lot on ES6. React uses ES6, and you should be familiar with some of the new features like: Classes, Arrow Functions, Variables(let, const). 
=>ES6 stands for ECMAScript 6. ECMAScript was created to standardize JavaScript, and ES6 is the 6th version of ECMAScript, it was published in 2015.

#What is props ?
=>Props stands for properties.
=>It is used to passed argument one component to another component - parent component to child component.
=>In ReactJS, the props are a type of object where the value of attributes of a tag is stored. 
=>Basically, these props components are read-only components.
=>Props are immutable, which means that they cannot be modified
=>The word “props” implies “properties”, and its working functionality is quite similar to HTML attributes.
=>React Props are like function arguments in JavaScript and attributes in HTML.
To send props into a component, use the same syntax as HTML attributes:
ex - <Car brand="Ford" />;

V.IMP-NOTE : when you have to dynamically passing some data to component passed as a props.

#What is a config driven UI?
=>Config-driven UI is a technique that allows you to create user interfaces based on a configuration file, such as JSON, or a TypeScript file that defines the layout and content of the UI components. 
=>This can be useful for creating dynamic and customizable UIs without hard coding them.

Q: How can I write comments in JSX?
A: JSX comments are written as follows:
=>{/*  */} - for single or multiline comments.

Q: What is <React.Fragment></React.Fragment> and <></>?
A: <React.Fragment></React.Fragment> is a feature in React that allows you to return multiple elements from a React component by allowing you to group a list of children without adding extra nodes to the DOM. <></> is the shorthand tag for React.Fragment. 
=>The only difference between them is that the shorthand version does not support the key attribute.

Q. Why do we need keys in React?
A: A key is a special attribute you need to include when creating lists of elements in React. 
=>Keys are used in React to identify which items in the list are changed, updated, or deleted.
=>In other words, we can say that keys are unique Identifier used to give an identity to the elements in the lists.
=>Keys should be given to the elements within the array to give the elements a stable identity.
#Example
<li key={0}>1</li>
<li key={1}>2</li>
<li key={2}>3</li>

Q.Can we use index as keys in React?
A: Yes, we can use the index as keys, but it is not considered as a good practice to use them because if the order of items may change.
=>This can negatively impact performance and may cause issues with component state. 
=>Keys are taken from each object which is being rendered. 
=>There might be a possibility that if we modify the incoming data react may render them in unusual order.